{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monsters","id","alt","name","CardList","map","monster","Search","placeholder","handleFunction","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","json","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,8BAAyBF,EAAMG,SAASC,GAAxC,aAAuDC,IAAI,YACnE,6BAAKL,EAAMG,SAASG,OACpB,0DCJCC,EAAW,SAACP,GAErB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMG,SAASK,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAAuBN,SAAUM,GAAtBA,EAAQL,UCNtBM,G,YAAS,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAClC,OAEI,uBAAOX,UAAU,SAASY,KAAK,OAAOF,YAAaA,EAAaG,SAAUF,MCgCnEG,E,kDAhCd,aAAe,IAAD,8BACb,gBAWDH,eAAiB,SAACI,GACjB,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAXtC,EAAKC,MAAQ,CACZlB,SAAU,GACVe,YAAa,IAJD,E,qDAOd,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAACP,GAAD,OAAOA,EAAEQ,UACdD,MAAK,SAACP,GAAD,OAAO,EAAKC,SAAS,CAAEd,SAAUa,S,oBAKzC,WACC,MAAkCS,KAAKJ,MAA/BlB,EAAR,EAAQA,SAAUe,EAAlB,EAAkBA,YACZQ,EAAkBvB,EAASwB,QAAO,SAAClB,GAAD,OACvCA,EAAQH,KAAKsB,cAAcC,SAASX,EAAYU,kBAEjD,OACC,sBAAK3B,UAAU,MAAf,UACC,cAAC,EAAD,CACCU,YAAY,kBACZC,eAAgBa,KAAKb,iBAEtB,cAAC,EAAD,CAAUT,SAAUuB,W,GA3BNI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bf9811c8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`http://robohash.org/${props.monsters.id}?set=set2`} alt=\"monster\" />\r\n            <h1>{props.monsters.name}</h1>\r\n            <p>props.monsters.email </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './card-list.styles.css'\r\nimport {Card} from '../card/card.component.jsx'\r\n\r\nexport const CardList = (props) => {\r\n    // console.log(props)\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map((monster) => (\r\n                <Card key={monster.id} monsters={monster }/>\r\n\t\t\t))}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './search.style.css'\r\n\r\nexport const Search = ({ placeholder, handleFunction }) => {\r\n    return(\r\n    \r\n        <input className=\"search\" type=\"text\" placeholder={placeholder} onChange={handleFunction} />\r\n    )\r\n} ","import React, { Component } from \"react\";\nimport { CardList } from \"./component/card-list/card-list.component\";\nimport \"./App.css\";\nimport { Search } from \"./component/search-box/search.component\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: \"\",\n\t\t};\n\t}\n\tcomponentDidMount() {\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((e) => e.json())\n\t\t\t.then((e) => this.setState({ monsters: e }));\n\t}\n\thandleFunction = (e) => {\n\t\tthis.setState({ searchField: e.target.value });\n\t};\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonster = monsters.filter((monster) =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Search\n\t\t\t\t\tplaceholder=\"search monsters\"\n\t\t\t\t\thandleFunction={this.handleFunction}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonster} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}